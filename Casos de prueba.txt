prueba_nombre_programa {
	if (a > c) then{
		precio =: flete + costo * (1.5);
	} end_if;
}

prueba_nombre_programa {
	if (a > c) then{
		precio =: flete + costo * 1.5;
	} 
	else {
		costo =: flete;
	}end_if;
}

prueba_nombre_programa {
	if (a + b > c + 1) then{
		a =: b + c;
	} 
	else{
		a =: b + c;
	}
	end_if;
}

prueba_nombre_programa {
	if (a + b <= c + 1) then{
		a =: b + c;
	} 
	else{
		a =: b + c;
	}
	end_if;
}

prueba_nombre_programa {
    do { 
        a =: b;
    }
    until (a = b) : (a =: a + 1);
}

prueba_nombre_programa {
    do { 
        a =: b;
		break;
    }
    until (a > b) : (a =: a + 1);
}

prueba_nombre_programa {
	etiqueta : do { 
		var3 =: funcion1(var3,var3);
		break : etiqueta;
	}
	until (var1 = var2) : (var3 =: funcion1(var3,var3));
}

prueba_nombre_programa {
	out ('hola');
}

prueba_nombre_programa {
	f64 a, b, c, d;
	ui16 var1, var2;
}

prueba_nombre_programa {
	fun funcion1(ui16 var2) : ui16 {
		var1 =: 4;
		return (2.0);
	};
}

prueba_nombre_programa {
	f64 a, b, c, d;
	ui16 var1, var2;
	f64 var2;
	fun funcion1(ui16 var3) : ui16 {
		var1 =: 4;
		fun funcion2(f64 var4) : ui16 {
			ui16 var5;
			return (4);
		};
		ui16 var5;
		return (2.0);
	};
}

prueba_nombre_programa {
	ui16 var1, var2;
	fun funcion1(ui16 var3) : ui16 {
		ui16 var1;
		return (2.0);
	};
}

prueba_nombre_programa {
	ui16 var1, var2;
	fun funcion1(ui16 var3) : ui16 {
		f64 var1;
		ui16 var5;
		return (2.0);
	};
}

prueba_nombre_programa {
	ui16 var1, var2;
	fun funcion1(ui16 var3) : ui16 {
		f64 var1;
		ui16 var1;
		ui16 var5;
		return (2.0);
	};
}

prueba_nombre_programa {
	ui16 var1, var2;
	fun funcion1(ui16 var3) : ui16 {
		f64 var1;
		ui16 var1;
		var1 =: 5;
		ui16 var5;
		return (2.0);
	};
}

//variable no declarada
prueba_nombre_programa {
	ui16 var1, var2;
	fun funcion1(ui16 var3) : ui16 {
		f64 var1;
		var7 =: 5;
		ui16 var5;
		return (2.0);
	}; 
}

prueba_nombre_programa {
	ui16 var1, var2;
	fun funcion1(ui16 var3) : ui16 {
		ui16 var5;
		return (2.0);
	};
	fun funcion2(ui16 var3) : ui16 {
		return (2.0);
	};
}

prueba_nombre_programa {
	ui16 var1, var2;
	fun funcion1(ui16 var3) : ui16 {
		ui16 var5;
		return (2.0);
	};
	fun funcion1(ui16 var3) : ui16 {
		return (2.0);
	};
}

prueba_nombre_programa {
	ui16 var1, var2;
	fun funcion1(ui16 var1, ui16 var4) : ui16 {
		ui16 var5;
		return (2.0);
	};
	var2 =: funcion1(var1, var4);
}

prueba_nombre_programa {
	ui16 var1, var2;
	fun funcion1(ui16 var1, ui16 var4) : ui16 {
		ui16 var5;
		return (2.0);
	};
	fun funcion2(ui16 var1, ui16 var4) : ui16 {
		ui16 var5;
		return (2.0);
	};
	var2 =: funcion1(var1, var4);
}


prueba_nombre_programa {
	ui16 var1, var2, var3;
	etiqueta : do {
		var1 =: 2;
		var2 =: 3;
		do { 
			var3 =: 1;	
		}
		until (var1 = var2) : (var3 =: 1;);
		var3 =: 5;
		break : etiqueta;
	}
	until (var1 = var2) : (var3 =: 2;);
}

prueba_nombre_programa {
	ui16 var1, var2, var3;
	var1 =: 1;
	defer var2 =: 2;
	var3 =: 3;
}

prueba_lexico_flotantes{
	f64 var_dbl1, var_dbl2;
	var_dbl1 =: 2.;
	var_dbl2 =: -2.;
}

prueba_lexico_flotantes{
	f64 var_dbl1, var_dbl2, var_dbl3, var_dbl4;
	var_dbl1 =: -1.;
	var_dbl2 =: 2.;
	var_dbl3 =: 1.;
	var_dbl4 =: -2.;
}

prueba_lexico_cad{	
	ui16 hola;
	out ('hola');
	out ('hola');
	out ('hola2');
}

prueba_nombre_programa {
	ui16 a, b, c, d, var1,var2;
	f64 x, y, z;
	var1 =: 4;
	var2 =: a + b * c  - d / 4;
	z =: tof64(var2) + x;
	y =: x * tof64(a);
}

prueba_nombre_programa {
	ui16 var1,var2;
	var1 =: 4;
	var2 =: 4;
	if (var1 = var2) then{
		var1 =: 4;
	} end_if;
	if (var1 = var2) then{
		var1 =: 4;}
	else{
	    var1 =: 5;
		out ('por else');
	}end_if;
} 

prueba_nombre_programa {
	ui16 var1, var2, var3;
	do { 
		var3 =: 1;
		if (var3 > 2) then{
		  out ('mayor');
		}end_if;
	}
	until (var1 = var2) : (var3 =: 1);
}

prueba_nombre_programa {
	ui16 var1, var2, var3;
	fun funcion1(ui16 a, ui16 b) : ui16 {
		a =: a - b;
		return (a);
	};
	do { 
		var3 =: funcion1(var3,var3);
		if (var3 > 2) then{
		  out ('mayor');
		}end_if;
	}
	until (var1 = var2) : (var3 =: funcion1(var3,var3));
}


prueba_nombre_programa {
	ui16 a, b;
	a =: 1;
	if (a > 0) then{
		b =: 2;
	} 
	else{
		b =: 3;
	} end_if;
}


prueba_nombre_programa {
	ui16 var1;
	fun funcion1(ui16 var2) : ui16 {
		var1 =: var2;
		return (2.0);
	};
	var1 =: funcion1(2);
}



prueba_nombre_programa {
	ui16 var1;
	var1 =: 1;
	if (var1 = 2) then{
		out('entro if');}
	else{
		out('entro else');
	}end_if;
}


prueba_nombre_programa {
	ui16 var1, var2;
	var1 =: 1;
	do { 
		var2 =: var1 + 1;
		out('entro');
	}
	until (var1 < 5) : (var1 =: var1 + 1);
}

prueba_nombre_programa {
	ui16 var1;
	fun funcion1(ui16 var2) : ui16 {
		var1 =: var2;
		out('entro a funcion1');
		return (2);
	};
	out('llamo a funcion1');
	var1 =: funcion1(2);
}

prueba_nombre_programa {
	ui16 var1;
	fun funcion1(ui16 var2) : ui16 {
		var1 =: funcion1(var2);
		return (var1);
	};
	var1 =: funcion1(2);
}

prueba_nombre_programa {
	ui16 var1;
	fun funcion0(ui16 var2) : ui16 {
		return (var2);
	};
	fun funcion1(ui16 var2) : ui16 {
		var1 =: funcion0(var2);
		return (var1);
	};
	var1 =: funcion1(2);
}

prueba_nombre_programa {
	ui16 var1;
	fun funcion1(ui16 var2) : ui16 {
		var1 =: 3;
		return (var1);
	};
	var1 =: funcion1(2);
}


prueba_nombre_programa {
	ui16 var1, var2, var3;
	fun fun1(ui16 a) : ui16 {
		fun fun2(ui16 b) : ui16 {
			out('fun2');
			fun fun3(ui16 c) : ui16 {
				out('fun3');
				return (c+1);
			};
			var3 =: fun3(1);
			if (var3 = 2) then{
				out('es 2');}
			else{
				out('no es 2');
			}end_if;
			return (b * var3);
		};
		out('fun1');
		var2 =: fun2(2);
		if (var2 = 4) then{
			out('es 4');}
		else{
			out('no es 4');
		}end_if;
		return (var2 + a);
	};
	var1 =: fun1(1) * 2;
	if (var1 = 10) then{
		out('es 10');}
	else{
		out('no es 10');
	}end_if;
	out('fin');
}

prueba_nombre_programa {
	ui16 var1, var2;
	var1 =: 1;
	eti1: do { 
		out('entro');
		if (var1 = 4) then{
			out('es 4');
			break : eti1;}
		else{
			out('no es 4');
		}end_if;
		out('despues break');
	}
	until (var1 > 5) : (var1 =: var1 + 1);
	out('fin');
}


PROBLEMA SI NO INVOCO A LA FUNCION, NO TIRA ERROR
REALIZO SOLO EL CHEQUEO SI SE ESTA EN UNA FUNCION
